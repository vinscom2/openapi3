{
  "openapi": "3.0.0",
  "info": {
    "title": "Doordarshan",
    "description": "API for broadcasting",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/broadcast/{topicName}": {
      "post": {
        "summary": "Send message to all subscriber of topicName",
        "description": "Send message to all subscriber of topicName",
        "operationId": "API_V1_BROADCAST_SERVICE",
        "parameters": [
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemasbroadcastMessage"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "topicName",
          "in": "path",
          "description": "Name of topic on which to broadcast message",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/v1/task": {
      "post": {
        "summary": "Send task for processing",
        "description": "Send task to one of the clients for processing and get back processed result. Only client type can be defined, and system will send message to any client of given type. There is not guarantee that message will be processed. But, in any scenario, request will return with 200 or 400 response.\nConsume can make multiple sequential and parallel request to increase reliability (It is recommended to keep number of request to minimum). ",
        "operationId": "API_V1_TASK_SERVICE",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemastaskMessage"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/auth": {
      "post": {
        "description": "Generate auth token",
        "operationId": "API_V1_AUTHENTICATION_SERVICE",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemasauthenticationResponseMessage"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemasauthenticationRequestMessage"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "broadcastMessage": {
        "title": "Root Type for broadcastMessage",
        "description": "The root of the broadcastMessage type's schema.",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "taskMessage": {
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "authenticationRequestMessage": {
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "authenticationResponseMessage": {
        "properties": {
          "token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "jwt_auth": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}